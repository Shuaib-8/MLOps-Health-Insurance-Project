name: MLOps CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  e2e_mlops_ci_workflow:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.11'

      - name: Install dependencies
        run: |
          uv venv
          uv sync --frozen --no-dev

      - name: Install package
        run: |
          uv pip install -e .

      - name: Run feature engineering (ordinal encoding featureset)
        run: |
          uv run python src/features/engineer.py \
          --input data/interim/cleaned_health_insurance_us_v1.csv \
          --output data/processed/clean_feature_process_ordinal_health_insurance_us_v1.csv \
          --preprocessor models/trained/preprocessor_ordinal_clean.pkl \
          --encoding ordinal

      - name: Setup MLflow
        run: |
          docker pull ghcr.io/mlflow/mlflow:latest
          docker run -d -p 5555:5000 --name mlflow-tracking-server ghcr.io/mlflow/mlflow:latest \
            sh -c "mkdir -p /mlflow/mlruns /mlflow/artifacts && \
            mlflow server --host 0.0.0.0 --port 5000 \
            --backend-store-uri sqlite:///mlflow/mlflow.db \
            --artifacts-destination /mlflow/artifacts \
            --serve-artifacts"

      - name: Train the model
        run: |
          uv run python src/models/train_model.py \
          --config configs/model_config.yaml \
          --data data/processed/clean_feature_process_ordinal_health_insurance_us_v1.csv \
          --models-dir models/ \
          --mlflow-tracking-uri http://localhost:5555
      
      - name: Cleanup MLflow
        run: |
          docker stop mlflow-tracking-server
          docker rm mlflow-tracking-server
          docker rmi ghcr.io/mlflow/mlflow:latest

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: "."
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/fastapi:{{ github.sha }}
          file: "Dockerfile"
          